/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
export class GilsdavReuseStrategy {
    // private handlers: {[key: string]: DetachedRouteHandle} = {};
    constructor() {
    }
    /**
     * @param {?} route
     * @return {?}
     */
    shouldDetach(route) {
        // console.log('shouldDetach', route);
        return false;
    }
    /**
     * @param {?} route
     * @param {?} handle
     * @return {?}
     */
    store(route, handle) {
        // console.log('store', route, handle);
        // console.log('store url', this.getKey(route));
        // this.handlers[this.getKey(route)] = handle;
    }
    /**
     * @param {?} route
     * @return {?}
     */
    shouldAttach(route) {
        // console.log('shouldAttach', route, this.getKey(route));
        // return !!this.handlers[this.getKey(route)];
        return false;
    }
    /**
     * @param {?} route
     * @return {?}
     */
    retrieve(route) {
        // console.log('retrieve', route);
        // console.log('retrieve url', this.getKey(route));
        // const result = this.handlers[this.getKey(route)];
        // delete this.handlers[this.getKey(route)];
        // return result;
        return null;
    }
    /**
     * @param {?} future
     * @param {?} curr
     * @return {?}
     */
    shouldReuseRoute(future, curr) {
        // console.log('shouldReuseRoute', future, curr, this.getKey(future) === this.getKey(curr));
        // console.log('shouldReuseRoute', future && curr ? this.getKey(future) === this.getKey(curr) : false);
        return future && curr ? this.getKey(future) === this.getKey(curr) : false;
    }
    /**
     * @param {?} route
     * @return {?}
     */
    getKey(route) {
        // console.log(route.parent.component.toString());
        if (!route.data.localizeRouter && (!route.parent || !route.parent.parent)) {
            return 'LANG';
        }
        else if (route.data.localizeRouter) {
            return `${this.getKey(route.parent)}/${route.data.localizeRouter.path}`;
        }
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2lsc2Rhdi1yZXVzZS1zdHJhdGVneS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BnaWxzZGF2L25neC10cmFuc2xhdGUtcm91dGVyLyIsInNvdXJjZXMiOlsibGliL2dpbHNkYXYtcmV1c2Utc3RyYXRlZ3kudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUVBLE1BQU07O0lBRUo7SUFDQSxDQUFDOzs7OztJQUNELFlBQVksQ0FBQyxLQUE2QjtRQUN4QyxzQ0FBc0M7UUFDdEMsTUFBTSxDQUFDLEtBQUssQ0FBQztJQUNmLENBQUM7Ozs7OztJQUNELEtBQUssQ0FBQyxLQUE2QixFQUFFLE1BQTJCO1FBQzlELHVDQUF1QztRQUN2QyxnREFBZ0Q7UUFDaEQsOENBQThDO0lBQ2hELENBQUM7Ozs7O0lBQ0QsWUFBWSxDQUFDLEtBQTZCO1FBQ3hDLDBEQUEwRDtRQUMxRCw4Q0FBOEM7UUFDOUMsTUFBTSxDQUFDLEtBQUssQ0FBQztJQUNmLENBQUM7Ozs7O0lBQ0QsUUFBUSxDQUFDLEtBQTZCO1FBQ3BDLGtDQUFrQztRQUNsQyxtREFBbUQ7UUFDbkQsb0RBQW9EO1FBQ3BELDRDQUE0QztRQUM1QyxpQkFBaUI7UUFDakIsTUFBTSxDQUFDLElBQUksQ0FBQztJQUNkLENBQUM7Ozs7OztJQUNELGdCQUFnQixDQUFDLE1BQThCLEVBQUUsSUFBNEI7UUFDM0UsNEZBQTRGO1FBQzVGLHVHQUF1RztRQUN2RyxNQUFNLENBQUMsTUFBTSxJQUFJLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsS0FBSyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUM7SUFDNUUsQ0FBQzs7Ozs7SUFDTyxNQUFNLENBQUMsS0FBNkI7UUFDMUMsa0RBQWtEO1FBQ2xELEVBQUUsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxjQUFjLElBQUksQ0FBQyxDQUFDLEtBQUssQ0FBQyxNQUFNLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUMxRSxNQUFNLENBQUMsTUFBTSxDQUFDO1FBQ2hCLENBQUM7UUFBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxjQUFjLENBQUMsQ0FBQyxDQUFDO1lBQ3JDLE1BQU0sQ0FBQyxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxJQUFJLEtBQUssQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDLElBQUksRUFBRSxDQUFDO1FBQzFFLENBQUM7SUFDSCxDQUFDO0NBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSb3V0ZVJldXNlU3RyYXRlZ3ksIERldGFjaGVkUm91dGVIYW5kbGUsIEFjdGl2YXRlZFJvdXRlU25hcHNob3QgfSBmcm9tICdAYW5ndWxhci9yb3V0ZXInO1xuXG5leHBvcnQgY2xhc3MgR2lsc2RhdlJldXNlU3RyYXRlZ3kgaW1wbGVtZW50cyBSb3V0ZVJldXNlU3RyYXRlZ3kge1xuICAvLyBwcml2YXRlIGhhbmRsZXJzOiB7W2tleTogc3RyaW5nXTogRGV0YWNoZWRSb3V0ZUhhbmRsZX0gPSB7fTtcbiAgY29uc3RydWN0b3IoKSB7XG4gIH1cbiAgc2hvdWxkRGV0YWNoKHJvdXRlOiBBY3RpdmF0ZWRSb3V0ZVNuYXBzaG90KTogYm9vbGVhbiB7XG4gICAgLy8gY29uc29sZS5sb2coJ3Nob3VsZERldGFjaCcsIHJvdXRlKTtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgc3RvcmUocm91dGU6IEFjdGl2YXRlZFJvdXRlU25hcHNob3QsIGhhbmRsZTogRGV0YWNoZWRSb3V0ZUhhbmRsZSk6IHZvaWQge1xuICAgIC8vIGNvbnNvbGUubG9nKCdzdG9yZScsIHJvdXRlLCBoYW5kbGUpO1xuICAgIC8vIGNvbnNvbGUubG9nKCdzdG9yZSB1cmwnLCB0aGlzLmdldEtleShyb3V0ZSkpO1xuICAgIC8vIHRoaXMuaGFuZGxlcnNbdGhpcy5nZXRLZXkocm91dGUpXSA9IGhhbmRsZTtcbiAgfVxuICBzaG91bGRBdHRhY2gocm91dGU6IEFjdGl2YXRlZFJvdXRlU25hcHNob3QpOiBib29sZWFuIHtcbiAgICAvLyBjb25zb2xlLmxvZygnc2hvdWxkQXR0YWNoJywgcm91dGUsIHRoaXMuZ2V0S2V5KHJvdXRlKSk7XG4gICAgLy8gcmV0dXJuICEhdGhpcy5oYW5kbGVyc1t0aGlzLmdldEtleShyb3V0ZSldO1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICByZXRyaWV2ZShyb3V0ZTogQWN0aXZhdGVkUm91dGVTbmFwc2hvdCk6IERldGFjaGVkUm91dGVIYW5kbGUge1xuICAgIC8vIGNvbnNvbGUubG9nKCdyZXRyaWV2ZScsIHJvdXRlKTtcbiAgICAvLyBjb25zb2xlLmxvZygncmV0cmlldmUgdXJsJywgdGhpcy5nZXRLZXkocm91dGUpKTtcbiAgICAvLyBjb25zdCByZXN1bHQgPSB0aGlzLmhhbmRsZXJzW3RoaXMuZ2V0S2V5KHJvdXRlKV07XG4gICAgLy8gZGVsZXRlIHRoaXMuaGFuZGxlcnNbdGhpcy5nZXRLZXkocm91dGUpXTtcbiAgICAvLyByZXR1cm4gcmVzdWx0O1xuICAgIHJldHVybiBudWxsO1xuICB9XG4gIHNob3VsZFJldXNlUm91dGUoZnV0dXJlOiBBY3RpdmF0ZWRSb3V0ZVNuYXBzaG90LCBjdXJyOiBBY3RpdmF0ZWRSb3V0ZVNuYXBzaG90KTogYm9vbGVhbiB7XG4gICAgLy8gY29uc29sZS5sb2coJ3Nob3VsZFJldXNlUm91dGUnLCBmdXR1cmUsIGN1cnIsIHRoaXMuZ2V0S2V5KGZ1dHVyZSkgPT09IHRoaXMuZ2V0S2V5KGN1cnIpKTtcbiAgICAvLyBjb25zb2xlLmxvZygnc2hvdWxkUmV1c2VSb3V0ZScsIGZ1dHVyZSAmJiBjdXJyID8gdGhpcy5nZXRLZXkoZnV0dXJlKSA9PT0gdGhpcy5nZXRLZXkoY3VycikgOiBmYWxzZSk7XG4gICAgcmV0dXJuIGZ1dHVyZSAmJiBjdXJyID8gdGhpcy5nZXRLZXkoZnV0dXJlKSA9PT0gdGhpcy5nZXRLZXkoY3VycikgOiBmYWxzZTtcbiAgfVxuICBwcml2YXRlIGdldEtleShyb3V0ZTogQWN0aXZhdGVkUm91dGVTbmFwc2hvdCkge1xuICAgIC8vIGNvbnNvbGUubG9nKHJvdXRlLnBhcmVudC5jb21wb25lbnQudG9TdHJpbmcoKSk7XG4gICAgaWYgKCFyb3V0ZS5kYXRhLmxvY2FsaXplUm91dGVyICYmICghcm91dGUucGFyZW50IHx8ICFyb3V0ZS5wYXJlbnQucGFyZW50KSkgeyAvLyBMYW5nIHJvdXRlXG4gICAgICByZXR1cm4gJ0xBTkcnO1xuICAgIH0gZWxzZSBpZiAocm91dGUuZGF0YS5sb2NhbGl6ZVJvdXRlcikge1xuICAgICAgcmV0dXJuIGAke3RoaXMuZ2V0S2V5KHJvdXRlLnBhcmVudCl9LyR7cm91dGUuZGF0YS5sb2NhbGl6ZVJvdXRlci5wYXRofWA7XG4gICAgfVxuICB9XG59XG4iXX0=