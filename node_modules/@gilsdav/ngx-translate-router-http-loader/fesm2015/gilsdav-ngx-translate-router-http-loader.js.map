{"version":3,"file":"gilsdav-ngx-translate-router-http-loader.js.map","sources":["ng://@gilsdav/ngx-translate-router-http-loader/lib/http-loader.ts"],"sourcesContent":["import { LocalizeParser, LocalizeRouterSettings } from '@gilsdav/ngx-translate-router';\nimport { TranslateService } from '@ngx-translate/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Routes } from '@angular/router';\nimport { Location } from '@angular/common';\n\n/**\n * Config interface\n */\nexport interface ILocalizeRouterParserConfig {\n  locales: Array<string>;\n  prefix?: string;\n}\n\nexport class LocalizeRouterHttpLoader extends LocalizeParser {\n  /**\n   * CTOR\n   * @param translate\n   * @param location\n   * @param settings\n   * @param http\n   * @param path\n   */\n  constructor(\n    translate: TranslateService,\n    location: Location,\n    settings: LocalizeRouterSettings,\n    private http: HttpClient,\n    private path: string = 'assets/locales.json'\n    ) {\n    super(translate, location, settings);\n  }\n\n  /**\n   * Initialize or append routes\n   * @param routes\n   */\n  load(routes: Routes): Promise<any> {\n    return new Promise((resolve: any) => {\n      this.http.get(`${this.path}`)\n        .subscribe((data: ILocalizeRouterParserConfig) => {\n          this.locales = data.locales;\n          this.prefix = data.prefix || '';\n          this.init(routes).then(resolve);\n        });\n    });\n  }\n}\n"],"names":[],"mappings":";;;;;;AAAA,8BAcsC,SAAQ,cAAc;;;;;;;;;IAS1D,YACE,SAA2B,EAC3B,QAAkB,EAClB,QAAgC,EACxB,IAAgB,EAChB,OAAe,qBAAqB;QAE5C,KAAK,CAAC,SAAS,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;QAH7B,SAAI,GAAJ,IAAI,CAAY;QAChB,SAAI,GAAJ,IAAI,CAAgC;KAG7C;;;;;;IAMD,IAAI,CAAC,MAAc;QACjB,OAAO,IAAI,OAAO,CAAC,CAAC,OAAY;YAC9B,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;iBAC1B,SAAS,CAAC,CAAC,IAAiC;gBAC3C,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;gBAC5B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,IAAI,EAAE,CAAC;gBAChC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aACjC,CAAC,CAAC;SACN,CAAC,CAAC;KACJ;CACF;;;;;;;;;;;;;;"}
