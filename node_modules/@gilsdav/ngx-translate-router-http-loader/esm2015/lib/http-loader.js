/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import { LocalizeParser } from '@gilsdav/ngx-translate-router';
/**
 * Config interface
 * @record
 */
export function ILocalizeRouterParserConfig() { }
if (false) {
    /** @type {?} */
    ILocalizeRouterParserConfig.prototype.locales;
    /** @type {?|undefined} */
    ILocalizeRouterParserConfig.prototype.prefix;
}
export class LocalizeRouterHttpLoader extends LocalizeParser {
    /**
     * CTOR
     * @param {?} translate
     * @param {?} location
     * @param {?} settings
     * @param {?} http
     * @param {?=} path
     */
    constructor(translate, location, settings, http, path = 'assets/locales.json') {
        super(translate, location, settings);
        this.http = http;
        this.path = path;
    }
    /**
     * Initialize or append routes
     * @param {?} routes
     * @return {?}
     */
    load(routes) {
        return new Promise((resolve) => {
            this.http.get(`${this.path}`)
                .subscribe((data) => {
                this.locales = data.locales;
                this.prefix = data.prefix || '';
                this.init(routes).then(resolve);
            });
        });
    }
}
if (false) {
    /** @type {?} */
    LocalizeRouterHttpLoader.prototype.http;
    /** @type {?} */
    LocalizeRouterHttpLoader.prototype.path;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaHR0cC1sb2FkZXIuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZ2lsc2Rhdi9uZ3gtdHJhbnNsYXRlLXJvdXRlci1odHRwLWxvYWRlci8iLCJzb3VyY2VzIjpbImxpYi9odHRwLWxvYWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLGNBQWMsRUFBMEIsTUFBTSwrQkFBK0IsQ0FBQzs7Ozs7QUFTdkYsaURBR0M7OztJQUZDLDhDQUF1Qjs7SUFDdkIsNkNBQWdCOztBQUdsQixNQUFNLCtCQUFnQyxTQUFRLGNBQWM7Ozs7Ozs7OztJQVMxRCxZQUNFLFNBQTJCLEVBQzNCLFFBQWtCLEVBQ2xCLFFBQWdDLEVBQ3hCLElBQWdCLEVBQ2hCLE9BQWUscUJBQXFCO1FBRTVDLEtBQUssQ0FBQyxTQUFTLEVBQUUsUUFBUSxFQUFFLFFBQVEsQ0FBQyxDQUFDO1FBSDdCLFNBQUksR0FBSixJQUFJLENBQVk7UUFDaEIsU0FBSSxHQUFKLElBQUksQ0FBZ0M7SUFHOUMsQ0FBQzs7Ozs7O0lBTUQsSUFBSSxDQUFDLE1BQWM7UUFDakIsTUFBTSxDQUFDLElBQUksT0FBTyxDQUFDLENBQUMsT0FBWSxFQUFFLEVBQUU7WUFDbEMsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsR0FBRyxJQUFJLENBQUMsSUFBSSxFQUFFLENBQUM7aUJBQzFCLFNBQVMsQ0FBQyxDQUFDLElBQWlDLEVBQUUsRUFBRTtnQkFDL0MsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDO2dCQUM1QixJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxNQUFNLElBQUksRUFBRSxDQUFDO2dCQUNoQyxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztZQUNsQyxDQUFDLENBQUMsQ0FBQztRQUNQLENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztDQUNGOzs7SUFwQkcsd0NBQXdCOztJQUN4Qix3Q0FBNEMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBMb2NhbGl6ZVBhcnNlciwgTG9jYWxpemVSb3V0ZXJTZXR0aW5ncyB9IGZyb20gJ0BnaWxzZGF2L25neC10cmFuc2xhdGUtcm91dGVyJztcbmltcG9ydCB7IFRyYW5zbGF0ZVNlcnZpY2UgfSBmcm9tICdAbmd4LXRyYW5zbGF0ZS9jb3JlJztcbmltcG9ydCB7IEh0dHBDbGllbnQgfSBmcm9tICdAYW5ndWxhci9jb21tb24vaHR0cCc7XG5pbXBvcnQgeyBSb3V0ZXMgfSBmcm9tICdAYW5ndWxhci9yb3V0ZXInO1xuaW1wb3J0IHsgTG9jYXRpb24gfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuXG4vKipcbiAqIENvbmZpZyBpbnRlcmZhY2VcbiAqL1xuZXhwb3J0IGludGVyZmFjZSBJTG9jYWxpemVSb3V0ZXJQYXJzZXJDb25maWcge1xuICBsb2NhbGVzOiBBcnJheTxzdHJpbmc+O1xuICBwcmVmaXg/OiBzdHJpbmc7XG59XG5cbmV4cG9ydCBjbGFzcyBMb2NhbGl6ZVJvdXRlckh0dHBMb2FkZXIgZXh0ZW5kcyBMb2NhbGl6ZVBhcnNlciB7XG4gIC8qKlxuICAgKiBDVE9SXG4gICAqIEBwYXJhbSB0cmFuc2xhdGVcbiAgICogQHBhcmFtIGxvY2F0aW9uXG4gICAqIEBwYXJhbSBzZXR0aW5nc1xuICAgKiBAcGFyYW0gaHR0cFxuICAgKiBAcGFyYW0gcGF0aFxuICAgKi9cbiAgY29uc3RydWN0b3IoXG4gICAgdHJhbnNsYXRlOiBUcmFuc2xhdGVTZXJ2aWNlLFxuICAgIGxvY2F0aW9uOiBMb2NhdGlvbixcbiAgICBzZXR0aW5nczogTG9jYWxpemVSb3V0ZXJTZXR0aW5ncyxcbiAgICBwcml2YXRlIGh0dHA6IEh0dHBDbGllbnQsXG4gICAgcHJpdmF0ZSBwYXRoOiBzdHJpbmcgPSAnYXNzZXRzL2xvY2FsZXMuanNvbidcbiAgICApIHtcbiAgICBzdXBlcih0cmFuc2xhdGUsIGxvY2F0aW9uLCBzZXR0aW5ncyk7XG4gIH1cblxuICAvKipcbiAgICogSW5pdGlhbGl6ZSBvciBhcHBlbmQgcm91dGVzXG4gICAqIEBwYXJhbSByb3V0ZXNcbiAgICovXG4gIGxvYWQocm91dGVzOiBSb3V0ZXMpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZTogYW55KSA9PiB7XG4gICAgICB0aGlzLmh0dHAuZ2V0KGAke3RoaXMucGF0aH1gKVxuICAgICAgICAuc3Vic2NyaWJlKChkYXRhOiBJTG9jYWxpemVSb3V0ZXJQYXJzZXJDb25maWcpID0+IHtcbiAgICAgICAgICB0aGlzLmxvY2FsZXMgPSBkYXRhLmxvY2FsZXM7XG4gICAgICAgICAgdGhpcy5wcmVmaXggPSBkYXRhLnByZWZpeCB8fCAnJztcbiAgICAgICAgICB0aGlzLmluaXQocm91dGVzKS50aGVuKHJlc29sdmUpO1xuICAgICAgICB9KTtcbiAgICB9KTtcbiAgfVxufVxuIl19