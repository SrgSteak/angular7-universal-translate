{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/@angular/router/router.d.ts.ÉµEmptyOutletComponent.html","webpack:///./src/app/app.client.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.server.module.ts","webpack:///./src/app/pages/shop/list/list.component.html","webpack:///./src/app/pages/shop/list/list.component.ts","webpack:///./src/app/pages/shop/shop.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.server.ts","webpack:///external \"@angular/animations\"","webpack:///external \"@angular/animations/browser\"","webpack:///external \"@angular/common\"","webpack:///external \"@angular/common/http\"","webpack:///external \"@angular/core\"","webpack:///external \"@angular/http\"","webpack:///external \"@angular/platform-browser\"","webpack:///external \"@angular/platform-browser/animations\"","webpack:///external \"@angular/platform-server\"","webpack:///external \"@angular/router\"","webpack:///external \"@gilsdav/ngx-translate-router\"","webpack:///external \"@gilsdav/ngx-translate-router-http-loader\"","webpack:///external \"@nguniversal/module-map-ngfactory-loader\"","webpack:///external \"@ngx-translate/core\"","webpack:///external \"@ngx-translate/http-loader\"","webpack:///external \"fs-extra\"","webpack:///external \"rxjs\""],"names":[],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","<router-outlet></router-outlet>","import { NgModule } from \"@angular/core\";\nimport { TranslateModule, TranslateLoader, TranslateService, TranslatePipe } from \"@ngx-translate/core\";\nimport { HttpLoaderFactory } from \"./app.module\";\nimport { HttpClient, HttpClientModule } from \"@angular/common/http\";\nimport { LocalizeRouterModule, LocalizeParser, LocalizeRouterSettings } from \"@gilsdav/ngx-translate-router\";\nimport { LocalizeRouterHttpLoader } from \"@gilsdav/ngx-translate-router-http-loader\";\nimport { Routes } from \"@angular/router\";\nimport { ListComponent } from \"./pages/shop/list/list.component\";\nimport {Location} from '@angular/common';\n\nexport const routes: Routes = [\n  {path: 'list/:country/:province/:town', component: ListComponent}\n];\n\n@NgModule({\n  imports: [\n    HttpClientModule,\n    TranslateModule.forRoot({\n      loader: {\n          provide: TranslateLoader,\n          useFactory: HttpLoaderFactory,\n          deps: [HttpClient]\n      }\n    }),\n    LocalizeRouterModule.forRoot(routes, {\n      parser: {\n        provide: LocalizeParser,\n        useFactory: (translate, location, settings, http) =>\n            new LocalizeRouterHttpLoader(translate, location, settings, http),\n        deps: [TranslateService, Location, LocalizeRouterSettings, HttpClient]\n      }\n    })\n  ],\n  exports: [\n    TranslatePipe\n  ]\n})\nexport class AppClientModule {}","<button (click)=\"switchLang('de')\">Deutsch</button>\n<button (click)=\"switchLang('en')\">English</button>\n<p>{{ 'welcome' |translate }}</p>\n<p>{{ 'go_to_list'|translate }}</p>\n<router-outlet></router-outlet>","import { Component } from '@angular/core';\nimport { LocalizeRouterService } from '@gilsdav/ngx-translate-router';\n\n@Component({\n  selector: 'my-app',\n  templateUrl: './app.component.html',\n  styleUrls: [ './app.component.css' ]\n})\nexport class AppComponent  {\n\n  constructor(private localizeRouterService: LocalizeRouterService) {\n\n  }\n\n  switchLang(lang: string): void {\n    console.log(lang);\n    this.localizeRouterService.changeLanguage(lang);\n  }\n}\n","import {BrowserModule} from \"@angular/platform-browser\";\nimport {NgModule} from '@angular/core';\nimport { HttpClient} from '@angular/common/http';\nimport {TranslateHttpLoader} from '@ngx-translate/http-loader';\nimport { AppComponent } from './app.component';\nimport { ShopModule } from './pages/shop/shop.module';\nimport { AppClientModule, routes } from \"./app.client.module\";\nimport { RouterModule } from \"@angular/router\";\n\n// AoT requires an exported function for factories\nexport function HttpLoaderFactory(http: HttpClient) {\n    return new TranslateHttpLoader(http);\n}\n\n@NgModule({\n  imports: [\n    BrowserModule.withServerTransition({appId: 'angular7-universal-translate'}),\n    AppClientModule,\n    ShopModule,\n    RouterModule.forRoot(routes)\n  ],\n  declarations: [AppComponent],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }","import { NgModule } from '@angular/core';\nimport { ServerModule } from '@angular/platform-server';\nimport { ModuleMapLoaderModule } from '@nguniversal/module-map-ngfactory-loader';\nimport { AppComponent } from './app.component';\nimport { AppModule } from './app.module';\nimport { LocalizeParser, LocalizeRouterSettings, LocalizeRouterModule } from '@gilsdav/ngx-translate-router';\nimport { Routes } from '@angular/router';\nimport { TranslateService, TranslateLoader, TranslateModule, TranslatePipe } from '@ngx-translate/core';\nimport { Observable } from 'rxjs';\nimport { Location } from '@angular/common';\n// this will only work on the server because it is a node.js module.\nimport * as fs from 'fs-extra';\nimport { routes } from './app.client.module';\n\n@NgModule({\n  imports: [\n    AppModule,\n    ServerModule,\n    ModuleMapLoaderModule,\n    TranslateModule.forRoot({\n      loader: {\n          provide: TranslateLoader,\n          useFactory: translateLoaderFactory,\n      }\n    }),\n    LocalizeRouterModule.forRoot(routes, {\n      parser: {\n        provide: LocalizeParser,\n        useFactory: localizeLoaderFactory,\n        deps: [TranslateService, Location, LocalizeRouterSettings]\n      }\n    })\n  ],\n  bootstrap: [AppComponent],\n  exports: [\n    TranslatePipe\n  ]\n})\nexport class AppServerModule {\n}\n\n\n/**\n * FOR NGX-TRANSLATE-ROUTER\n */\nexport class LocalizeUniversalLoader extends LocalizeParser {\n  /**\n   * Gets config from the server\n   * @param routes\n   */\n  public load(routes: Routes): Promise<any> {\n    return new Promise((resolve: any) => {\n      let data: any = JSON.parse(fs.readFileSync(`src/assets/locales.json`, 'utf8'));\n      this.locales = data.locales;\n      this.prefix = data.prefix;\n      this.init(routes).then(resolve);\n    });\n  }\n}\n\nexport function localizeLoaderFactory(translate: TranslateService, location: Location, settings: LocalizeRouterSettings) {\n  return new LocalizeUniversalLoader(translate, location, settings);\n}\n\n/**\n * FOR NGX-TRANSLATE\n */\nexport class TranslateUniversalLoader implements TranslateLoader {\n  /**\n   * Gets the translations from the server\n   * @param lang\n   * @returns {any}\n   */\n  public getTranslation(lang: string): Observable<any> {\n    return Observable.create(observer => {\n      observer.next(JSON.parse(fs.readFileSync(`src/assets/i18n/${lang}.json`, 'utf8')));\n      observer.complete();\n    });\n  }\n}\nexport function translateLoaderFactory() {\n  return new TranslateUniversalLoader();\n}","<p>list component works!</p>\n<p>{{ townslug }}</p>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.scss'],\n})\nexport class ListComponent implements OnInit {\n\n  public townslug: string;\n\n  constructor(private route: ActivatedRoute) {\n    this.route.paramMap.subscribe(params => {\n      this.townslug = params.get('country') + '/' + params.get('province') + '/' + params.get('town');\n    });\n  }\n\n    ngOnInit() {}\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { ListComponent } from './list/list.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  declarations: [\n    ListComponent\n  ],\n  exports: [\n    ListComponent\n  ]\n})\nexport class ShopModule {}\n","export const environment = {\n  production: true\n};\n","import { enableProdMode } from '@angular/core';\n\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nexport { AppServerModule } from './app/app.server.module';\n","module.exports = require(\"@angular/animations\");","module.exports = require(\"@angular/animations/browser\");","module.exports = require(\"@angular/common\");","module.exports = require(\"@angular/common/http\");","module.exports = require(\"@angular/core\");","module.exports = require(\"@angular/http\");","module.exports = require(\"@angular/platform-browser\");","module.exports = require(\"@angular/platform-browser/animations\");","module.exports = require(\"@angular/platform-server\");","module.exports = require(\"@angular/router\");","module.exports = require(\"@gilsdav/ngx-translate-router\");","module.exports = require(\"@gilsdav/ngx-translate-router-http-loader\");","module.exports = require(\"@nguniversal/module-map-ngfactory-loader\");","module.exports = require(\"@ngx-translate/core\");","module.exports = require(\"@ngx-translate/http-loader\");","module.exports = require(\"fs-extra\");","module.exports = require(\"rxjs\");"],"sourceRoot":""}